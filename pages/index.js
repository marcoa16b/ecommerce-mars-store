import React, { useState } from 'react';
import Head from 'next/head';
import Navbar from '../components/home/Navbar';
import { getAllProducts, getProductById } from '../utils/operationsPrintful';
import ProductGrid from '../components/ProductGrid';
import { useStateContext } from '../context/ContextProvider';
import Loading from '../components/Loading';
import { collection, getDocs } from "firebase/firestore";
import { db } from '../lib/firebase';
import Image from 'next/image';
import { MdFavoriteBorder, MdFavorite } from 'react-icons/md';

function Home() {
  const { cart, setCart, wishlist, setWishlist } = useStateContext();
  const [loading, setLoading] = useState(true);
  const [productList, setProductList] = useState(null);
  const [cartLength, setCartLength] = useState(0);
  const [isOnWishList, setIsOnWishList] = useState(false);

  const formatVariantName = (variantName) => {
    const [, name] = variantName.split(" - ");
  
    return name ? name : "One style";
  };

  // function addProductToWishList(product){
  //   const myWishlist = wishlist;
  //   let found = false;
  //   myWishlist.map((prod, i) => {
  //     if (product.id === prod.id){
  //       wishlist.splice(i, i+1);
  //       found = true;
  //     }
  //   })
  //   if (!found) myWishlist.push(product);
  //   setWishlist(myWishlist);
  //   onWishlist(product);
  //   console.log(wishlist);
  // }
  // const onWishlist = (product) => {
  //   let found = false;
  //   wishlist.map(prod => {
  //     if (product.id === prod.id){
  //       found = true;
  //       setIsOnWishList(true);
  //     }
  //   })
  //   if (!found) setIsOnWishList(false);
  // };

  async function getProducts() {
    const products = [];
    const querySnapshot = await getDocs(collection(db, "products"));
    querySnapshot.forEach((doc) => {
      const data = doc.data();
      products.push(data);
      //console.log(`${doc.id} =>`, data);
    });
    setProductList(products);
    console.log(products);
    setLoading(false);
  }

  React.useEffect(() => {
    //printData();
    getProducts();
  }, [])

  return (
    loading
    ?
    <Loading />
    :
    <div>
      <Head>
        <title>Mars Elit - Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className='z-50'>
        <Navbar cartLength={cartLength} />
      </header>

      <main className='z-10'>
        <div className="text-center pb-6 md:pb-12">
          <h1 className="text-xl md:text-3xl lg:text-5xl font-bold">
            All Products
          </h1>
        </div>
        <div>
          {
            productList.map((product, i) => (
              <div 
                key={i}
                className="relative max-w-sm min-w-[290px] bg-White shadow-md rounded-3xl p-2 mx-1 my-3 cursor-pointer"
              >
                <div className="overflow-x-hidden rounded-2xl relative">
                  <div className="h-96 rounded-2xl w-full object-cover">
                    <Image 
                      src={product.product.thumbnail_url}
                      layout='responsive'
                      width='1000'
                      height='1000'
                      alt="Picture of the product"
                    />
                  </div>
                  {/* <p 
                    className="absolute flex items-center justify-center right-2 top-2 bg-White rounded-full w-10 h-10 text-4xl cursor-pointer group"
                    onClick={() => {addProductToWishList(product)}}
                  >
                    {isOnWishList
                    ?
                      <MdFavorite />
                      :
                      <MdFavoriteBorder />
                    }
                  </p> */}
                </div>
                <div className="mt-4 pl-2 mb-2 flex justify-between ">
                  <div>
                    <p className="text-lg font-semibold text-gray-900 mb-0">{product.name}</p>
                    <p className="text-md text-gray-800 mt-0">${product.price} USD</p>
                  </div>
                  <div className="flex min-w-fit flex-col-reverse mb-1 mr-4 group cursor-pointer">
                    See product
                  </div>
                </div>
              </div>
            ))
          }
        </div>

        {/* <div className="relative max-w-sm min-w-[340px] bg-white shadow-md rounded-3xl p-2 mx-1 my-3 cursor-pointer">
          <div className="overflow-x-hidden rounded-2xl relative">
            <img className="h-40 rounded-2xl w-full object-cover" src="https://pixahive.com/wp-content/uploads/2020/10/Gym-shoes-153180-pixahive.jpg"></img>
            <p className="absolute right-2 top-2 bg-white rounded-full p-2 cursor-pointer group">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 group-hover:opacity-50 opacity-70" fill="none" viewBox="0 0 24 24" stroke="black">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z" />
              </svg>
            </p>
          </div>
          <div className="mt-4 pl-2 mb-2 flex justify-between ">
            <div>
              <p className="text-lg font-semibold text-gray-900 mb-0">Product Name</p>
              <p className="text-md text-gray-800 mt-0">$340</p>
            </div>
            <div className="flex flex-col-reverse mb-1 mr-4 group cursor-pointer">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 group-hover:opacity-70" fill="none" viewBox="0 0 24 24" stroke="gray">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
              </svg>
            </div>
          </div>
        </div> */}

        {/* <ProductGrid setCartLength={setCartLength} products={productList} /> */}
      </main>

      <footer className=''>  
      </footer>
    </div>
  )
}

// export async function getServerSideProps() {
//   const products = getAllProducts()
//   // const res = await fetch('https://api.printful.com/sync/products', {
//   //   mode: 'no-cors',
//   //   headers: {
//   //     'authorization': 'Bearer ' + process.env.API_KEY_PRINTFUL,
//   //   }
//   // });
//   let data = await res.json();
//   return {
//     props: { data }
//   }
// }

export default Home;